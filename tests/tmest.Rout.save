
R version 2.5.1 (2007-06-27)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rrcov)
Loading required package: robustbase
Scalable Robust Estimators with High Breakdown Point (version 0.4-01)
> library(MASS)
> 
> dodata <- function(nrep = 1, time = FALSE, full = TRUE) {
+     ##@bdescr
+     ## Test the function covMest() on the literature datasets:
+     ##
+     ## Call covMest() for all regression datasets available in rrcov and print:
+     ##  - execution time (if time == TRUE)
+     ##  - The constants c and M
+     ##  - determinant of the covariance matrix
+     ##  - estimated center and covarinance matrix if full == TRUE)
+     ##
+     ##@edescr
+     ##
+     ##@in  nrep              : [integer] number of repetitions to use for estimating the
+     ##                                   (average) execution time
+     ##@in  time              : [boolean] whether to evaluate the execution time
+     ##@in  full              : [boolean] whether to print the estimated cente and covariance matrix
+ 
+     domest <- function(x, xname, nrep = 1) {
+         n <- dim(x)[1]
+         p <- dim(x)[2]
+         mm <- covMest(x)
+         crit <- log(mm$crit)
+         c1 <- mm$c1
+         M <- mm$M
+ 
+         if(time) {
+             xtime <- system.time(dorep(x, nrep))[1]/nrep
+             xres <- sprintf("%3d %3d %8.4f %8.4f %12.6f %10.3f\n",
+                             dim(x)[1], dim(x)[2], c1, M, crit, xtime)
+         }
+         else {
+             xres <- sprintf("%3d %3d %8.4f %8.4f %12.6f\n", dim(x)[1], dim(x)[2], c1, M, crit)
+         }
+         lpad <- lname-nchar(xname)
+         cat(pad.right(xname,lpad), xres)
+ 
+         if(full) {
+             cat("-------------\n")
+             print(mm)
+             cat("----------------------------------------------------------------------\n")
+         }
+     }
+ 
+     options(digits = 5)
+     set.seed(101) # <<-- sub-sampling algorithm now based on R's RNG and seed
+ 
+     lname <- 20
+  
+     data(heart)
+     data(starsCYG)
+     data(phosphor)
+     data(stackloss)
+     data(coleman)
+     data(salinity)
+     data(wood)
+     data(hbk)
+ 
+     data(Animals, package = "MASS")
+     brain <- Animals[c(1:24, 26:25, 27:28),]
+     data(milk)
+     data(bushfire)
+ 
+     tmp <- sys.call()
+     cat("\nCall: ", deparse(substitute(tmp)),"\n")
+ 
+     cat("Data Set               n   p       c1        M     LOG(det)       Time\n")
+     cat("======================================================================\n")
+     domest(heart[, 1:2], data(heart), nrep)
+     domest(starsCYG, data(starsCYG), nrep)
+     domest(data.matrix(subset(phosphor, select = -plant)), data(phosphor), nrep)
+     domest(stack.x, data(stackloss), nrep)
+     domest(data.matrix(subset(coleman, select = -Y)), data(coleman), nrep)
+     domest(data.matrix(subset(salinity, select = -Y)), data(salinity), nrep)
+     domest(data.matrix(subset(wood, select = -y)), data(wood), nrep)
+     domest(data.matrix(subset(hbk,  select = -Y)), data(hbk), nrep)
+ 
+     domest(brain, "Animals", nrep)
+     domest(milk, data(milk), nrep)
+     domest(bushfire, data(bushfire), nrep)
+     cat("======================================================================\n")
+ }
> 
> #   generate contaminated data using the function gendata with different
> #   number of outliers and check if the M-estimate breaks - i.e. the 
> #   largest eigenvalue is larger than e.g. 5. 
> #   For n=50 and p=10 and d=5 the M-estimate can break for number of 
> #   outliers grater than 20.
> dogen <- function(){
+     eig <- vector("numeric",26)
+     for(i in 0:25) {
+         gg <- gendata(eps=i)
+         mm <- covMest(gg$x, t0=gg$tgood, S0=gg$sgood, arp=0.001)
+         eig[i+1] <- ev <- eigen(mm$cov)$values[1]
+         # cat(i, ev, "\n")
+         
+         stopifnot(ev < 5 || i > 20)
+     }
+     # plot(0:25, eig, type="l", xlab="Number of outliers", ylab="Largest Eigenvalue")
+ }
> 
> #
> # generate data 50x10 as multivariate normal N(0,I) and add
> # eps % outliers by adding d=5.0 to each component.
> #   - if eps <0 and eps <=0.5, the number of outliers is eps*n
> #   - if eps >= 1, it is the number of outliers
> # - use the center and cov of the good data as good start
> # - use the center and the cov of all data as a bad start
> #   If using a good  start, the M-estimate must iterate to 
> #   the good solution: the largest eigenvalue is less then e.g. 5
> #
> gendata <- function(n=50, p=10, eps=0, d=5.0){
+ 
+     if(eps < 0 || eps > 0.5 && eps < 1.0 || eps > 0.5*n)
+         stop("eps is out of range")
+         
+     library(MASS)
+     
+     x <- mvrnorm(n, rep(0,p), diag(p))
+     bad <- vector("numeric")
+     nbad = if(eps < 1) eps*n else eps
+     if(nbad > 0){
+         bad <- sample(n, nbad)
+         x[bad,] <- x[bad,] + d
+     }
+     cov1 <- cov.wt(x)
+     cov2 <- if(nbad <= 0) cov1 else cov.wt(x[-bad,])
+     
+     list(x=x, bad=sort(bad), tgood=cov2$center, sgood=cov2$cov, tbad=cov1$center, sbad=cov1$cov)
+ }
> 
> pad.right <- function(z, pads)
+ {
+     ## Pads spaces to right of text
+     padding <- paste(rep(" ", pads), collapse = "")
+     paste(z, padding, sep = "")
+ }
> 
> 
> ## -- now do it:
> dodata()

Call:  dodata() 
Data Set               n   p       c1        M     LOG(det)       Time
======================================================================
heart                 12   2   0.9029   1.5448     7.116594
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  7.12 
Robust Estimate of Location:
height  weight  
  39.8    35.7  
Robust Estimate of Covariance:
        height  weight
height    38.0    76.8
weight    76.8   187.4
----------------------------------------------------------------------
starsCYG              47   2   1.2041   1.2437    -5.994596
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  -6 
Robust Estimate of Location:
   log.Te  log.light  
     4.42       4.95  
Robust Estimate of Covariance:
           log.Te  log.light
log.Te     0.0169     0.0587
log.light  0.0587     0.3523
----------------------------------------------------------------------
phosphor              18   2   1.1526   1.2951     8.867522
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  8.87 
Robust Estimate of Location:
  inorg  organic  
   15.4     39.1  
Robust Estimate of Covariance:
         inorg  organic
inorg      169      213
organic    213      308
----------------------------------------------------------------------
stackloss             21   3   0.5221   2.2734     7.241400
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  7.24 
Robust Estimate of Location:
  Air.Flow  Water.Temp  Acid.Conc.  
      59.5        20.8        87.3  
Robust Estimate of Covariance:
            Air.Flow  Water.Temp  Acid.Conc.
Air.Flow        9.34        8.69        8.52
Water.Temp      8.69       13.72        9.13
Acid.Conc.      8.52        9.13       34.54
----------------------------------------------------------------------
coleman               20   5   0.0000   3.3272     3.097223
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  3.1 
Robust Estimate of Location:
  salaryP   fatherWc    sstatus  teacherSc  motherLev  
     2.76      48.38       6.12      25.00       6.40  
Robust Estimate of Covariance:
           salaryP  fatherWc  sstatus  teacherSc  motherLev
salaryP     0.1873      1.32   -0.197      0.112     0.0555
fatherWc    1.3207    963.79  244.385      9.320    25.5134
sstatus    -0.1970    244.39   88.651      2.834     7.4910
teacherSc   0.1120      9.32    2.834      0.581     0.4106
motherLev   0.0555     25.51    7.491      0.411     0.7709
----------------------------------------------------------------------
salinity              28   3   0.6742   2.1212     3.875096
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  3.88 
Robust Estimate of Location:
   X1     X2     X3  
10.02   3.21  22.36  
Robust Estimate of Covariance:
       X1      X2      X3
X1  15.35   1.990  -5.075
X2   1.99   5.210  -0.769
X3  -5.08  -0.769   2.314
----------------------------------------------------------------------
wood                  20   5   0.0000   3.3272   -35.156305
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  -35.2 
Robust Estimate of Location:
   x1     x2     x3     x4     x5  
0.587  0.122  0.531  0.538  0.892  
Robust Estimate of Covariance:
           x1         x2         x3         x4         x5
x1   0.006449   1.21e-03   0.002028  -3.77e-04  -1.05e-03
x2   0.001210   3.12e-04   0.000816  -3.34e-05   1.52e-05
x3   0.002028   8.16e-04   0.004266  -5.60e-04   2.27e-04
x4  -0.000377  -3.34e-05  -0.000560   1.83e-03   1.18e-03
x5  -0.001048   1.52e-05   0.000227   1.18e-03   1.78e-03
----------------------------------------------------------------------
hbk                   75   3   0.7046   2.0909     1.432433
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  1.43 
Robust Estimate of Location:
  X1    X2    X3  
1.54  1.78  1.69  
Robust Estimate of Covariance:
        X1      X2     X3
X1  1.6485  0.0739  0.171
X2  0.0739  1.6779  0.205
X3  0.1709  0.2049  1.558
----------------------------------------------------------------------
Animals               28   2   1.2041   1.2437    18.194771
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  18.2 
Robust Estimate of Location:
 body  brain  
 18.7   64.9  
Robust Estimate of Covariance:
       body  brain
body   4993   8466
brain  8466  30334
----------------------------------------------------------------------
milk                  86   8   0.0000   3.9379   -25.097402
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  -25.1 
Robust Estimate of Location:
    X1      X2      X3      X4      X5      X6      X7      X8  
  1.03   35.87   33.05   26.12   25.10   25.03  123.15   14.39  
Robust Estimate of Covariance:
          X1        X2        X3        X4        X5        X6        X7
X1  4.25e-07  0.000126  0.000155  0.000150  0.000134  0.000116  0.000592
X2  1.26e-04  2.095420  0.357950  0.253882  0.183416  0.290961  1.987976
X3  1.55e-04  0.357950  1.179254  0.864800  0.858658  0.837438  0.874434
X4  1.50e-04  0.253882  0.864800  0.687953  0.660842  0.642398  0.677376
X5  1.34e-04  0.183416  0.858658  0.660842  0.701559  0.656616  0.680844
X6  1.16e-04  0.290961  0.837438  0.642398  0.656616  0.661212  0.676469
X7  5.92e-04  1.987976  0.874434  0.677376  0.680844  0.676469  4.429781
X8  1.48e-05  0.263457  0.207309  0.135567  0.117928  0.126005  0.431508
          X8
X1  1.48e-05
X2  2.63e-01
X3  2.07e-01
X4  1.36e-01
X5  1.18e-01
X6  1.26e-01
X7  4.32e-01
X8  1.68e-01
----------------------------------------------------------------------
bushfire              38   5   0.0000   3.3272    23.218805
-------------
Minimum Covariance Determinant (MCD) estimator.
Call:
covMest(x = x)
-> Method:  M-Estimator. 

Log(Det.):  23.2 
Robust Estimate of Location:
 V1   V2   V3   V4   V5  
105  147  274  218  279  
Robust Estimate of Covariance:
       V1     V2     V3    V4    V5
V1    796    616  -3891  -875  -714
V2    616    543  -2587  -528  -447
V3  -3891  -2587  22979  5646  4487
V4   -875   -528   5646  1487  1162
V5   -714   -447   4487  1162   915
----------------------------------------------------------------------
======================================================================
> dogen()
> #cat('Time elapsed: ', proc.time(),'\n') # for ``statistical reasons''
> 
