
R version 2.6.0 Patched (2007-11-09 r43414)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> dodata <- function(nrep=1, time=FALSE, short=FALSE, full=TRUE, method = c("FASTMVE","MASS")){
+ ##@bdescr
+ ## Test the function covMve() on the literature datasets: 
+ ##
+ ## Call covMve() for all regression datasets available in rrco/robustbasev and print:
+ ##  - execution time (if time == TRUE)
+ ##  - objective fucntion
+ ##  - best subsample found (if short == false)
+ ##  - outliers identified (with cutoff 0.975) (if short == false)
+ ##  - estimated center and covarinance matrix if full == TRUE)
+ ## 
+ ##@edescr
+ ##
+ ##@in  nrep              : [integer] number of repetitions to use for estimating the 
+ ##                                   (average) execution time
+ ##@in  time              : [boolean] whether to evaluate the execution time
+ ##@in  short             : [boolean] whether to do short output (i.e. only the 
+ ##                                   objective function value). If short == FALSE,
+ ##                                   the best subsample and the identified outliers are 
+ ##                                   printed. See also the parameter full below
+ ##@in  full              : [boolean] whether to print the estimated cente and covariance matrix 
+ ##@in  method            : [character] select a method: one of (FASTMCD, MASS) 
+ 
+     domve <- function(x, xname, nrep=1){
+         n <- dim(x)[1]
+         p <- dim(x)[2]
+         alpha <- 0.5
+         h <- h.alpha.n(alpha, n, p)
+         if(method == "MASS"){
+             mve <- cov.mve(x, quantile.used=h)
+             quan <- h   #default: floor((n+p+1)/2)
+             crit <- mve$crit
+             best <- mve$best
+             mah <- mahalanobis(x, mve$center, mve$cov)
+             quantiel <- qchisq(0.975, p)
+             wt <- as.numeric(mah < quantiel)
+         }            
+         else{
+             mve <- CovMve(x, trace=FALSE)
+             quan <- as.integer(mve@quan)
+             crit <- log(mve@crit)
+             best <- mve@best
+             wt <- mve@wt
+         }
+         
+             
+         if(time){
+            xtime <- system.time(dorep(x, nrep, method))[1]/nrep
+            xres <- sprintf("%3d %3d %3d %12.6f %10.3f\n", dim(x)[1], dim(x)[2], quan, crit, xtime)
+         }
+         else{
+             xres <- sprintf("%3d %3d %3d %12.6f\n", dim(x)[1], dim(x)[2], quan, crit)
+         }
+ 
+         lpad<-lname-nchar(xname)
+         cat(pad.right(xname,lpad), xres)
+ 
+         if(!short){
+             cat("Best subsample: \n")
+             print(best)
+         
+             ibad <- which(wt == 0)
+             names(ibad) <- NULL
+             nbad <- length(ibad)
+             cat("Outliers: ", nbad, "\n")
+             if(nbad > 0)
+                 print(ibad)
+             if(full){
+                 cat("-------------\n")
+                 show(mve)   
+             } 
+             cat("--------------------------------------------------------\n")
+         }
+     } 
+ 
+     options(digits = 5)
+     set.seed(101) # <<-- sub-sampling algorithm now based on R's RNG and seed
+ 
+     lname <- 20
+     library(rrcov)
+     method <- match.arg(method)
+     if(method == "MASS")
+         library(MASS)
+ 
+ 
+     data(heart)
+     data(starsCYG)
+     data(phosphor)
+     data(stackloss)
+     data(coleman)
+     data(salinity)
+     data(wood)
+ 
+     data(hbk)
+ 
+     data(Animals, package = "MASS")
+     brain <- Animals[c(1:24, 26:25, 27:28),]
+     data(milk)
+     data(bushfire)
+ 
+     tmp <- sys.call()
+     cat("\nCall: ", deparse(substitute(tmp)),"\n")
+ 
+     cat("Data Set               n   p  Half LOG(obj)        Time\n")
+     cat("========================================================\n")
+     domve(heart[, 1:2], data(heart), nrep)
+     domve(starsCYG, data(starsCYG), nrep)
+     domve(data.matrix(subset(phosphor, select = -plant)), data(phosphor), nrep)
+     domve(stack.x, data(stackloss), nrep)
+     domve(data.matrix(subset(coleman, select = -Y)), data(coleman), nrep)
+     domve(data.matrix(subset(salinity, select = -Y)), data(salinity), nrep)
+     domve(data.matrix(subset(wood, select = -y)), data(wood), nrep)
+     domve(data.matrix(subset(hbk,  select = -Y)),data(hbk), nrep)
+ 
+     domve(brain, "Animals", nrep)
+     domve(milk, data(milk), nrep)
+     domve(bushfire, data(bushfire), nrep)
+     cat("========================================================\n")
+ }
> 
> dogen <- function(nrep=1, eps=0.49, method=c("FASTMVE", "MASS")){
+ 
+     domve <- function(x, nrep=1){ 
+         gc()
+         xtime <- system.time(dorep(x, nrep, method))[1]/nrep
+         cat(sprintf("%6d %3d %10.2f\n", dim(x)[1], dim(x)[2], xtime))
+         xtime   
+     } 
+ 
+     set.seed(1234)
+ 
+     library(rrcov)
+     library(MASS)
+     method <- match.arg(method)
+ 
+     ap <- c(2, 5, 10, 20, 30)
+     an <- c(100, 500, 1000, 10000, 50000)
+ 
+     tottime <- 0
+     cat("     n   p       Time\n")
+     cat("=====================\n")
+     for(i in 1:length(an)) {
+         for(j in 1:length(ap)) {
+             n <- an[i]
+             p <- ap[j]
+             if(5*p <= n){
+                 xx <- gendata(n, p, eps)
+                 X <- xx$X
+                 tottime <- tottime + domve(X, nrep)
+             }
+         } 
+     }
+     
+     cat("=====================\n")
+     cat("Total time: ", tottime*nrep, "\n")
+ }
> 
> docheck <- function(n, p, eps){
+     xx <- gendata(n,p,eps)
+     mve <- CovMve(xx$X)
+     check(mve, xx$xind)
+ }
> 
> check <- function(mcd, xind){
+ ##  check if mcd is robust w.r.t xind, i.e. check how many of xind
+ ##  did not get zero weight
+     mymatch <- xind %in% which(mcd@wt == 0)
+     length(xind) - length(which(mymatch))    
+ }
> 
> dorep <- function(x, nrep=1, method=c("FASTMVE","MASS")){ 
+ 
+     method <- match.arg(method)
+     for(i in 1:nrep)
+     if(method == "MASS")
+         cov.mve(x)
+     else
+         CovMve(x)
+ } 
> 
> #### gendata() ####
> # Generates a location contaminated multivariate 
> # normal sample of n observations in p dimensions
> #    (1-eps)*Np(0,Ip) + eps*Np(m,Ip)
> # where 
> #    m = (b,b,...,b)
> # Defaults: eps=0 and b=10
> #
> gendata <- function(n,p,eps=0,b=10){
+ 
+     if(missing(n) || missing(p))
+         stop("Please specify (n,p)")
+     if(eps < 0 || eps >= 0.5)
+         stop(message="eps must be in [0,0.5)")
+     X <- mvrnorm(n,rep(0,p),diag(1,nrow=p,ncol=p))
+     nbad <- as.integer(eps * n)
+     if(nbad > 0){
+         Xbad <- mvrnorm(nbad,rep(b,p),diag(1,nrow=p,ncol=p))
+         xind <- sample(n,nbad)
+         X[xind,] <- Xbad
+     }
+     list(X=X, xind=xind)
+ }
> 
> pad.right <- function(z, pads)
+ {
+ ### Pads spaces to right of text
+     padding <- paste(rep(" ", pads), collapse = "")
+     paste(z, padding, sep = "")
+ }
> 
> whatis<-function(x){
+     if(is.data.frame(x))
+         cat("Type: data.frame\n")
+     else if(is.matrix(x))
+         cat("Type: matrix\n")
+     else if(is.vector(x))
+         cat("Type: vector\n")
+     else
+         cat("Type: don't know\n")
+ }
> 
> library(rrcov)
Loading required package: robustbase
Scalable Robust Estimators with High Breakdown Point (version 0.4-03)
> dodata()

Call:  dodata() 
Data Set               n   p  Half LOG(obj)        Time
========================================================
heart                 12   2   6     3.764855
Best subsample: 
[1]  1  3  4  5  9 11
Outliers:  5 
[1]  2  6  8 10 12
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
height  weight  
  39.8    35.7  

Robust Estimate of Covariance: 
        height  weight
height   21.6    43.6 
weight   43.6   106.5 
--------------------------------------------------------
starsCYG              47   2  23    -2.738399
Best subsample: 
 [1]  1  2  4  6 10 12 13 16 25 26 28 31 33 38 39 40 41 42 43 44 45 46 47
Outliers:  7 
[1]  7  9 11 14 20 30 34
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
   log.Te  log.light  
     4.41       4.93  

Robust Estimate of Covariance: 
           log.Te  log.light
log.Te     0.0118  0.0395   
log.light  0.0395  0.2472   
--------------------------------------------------------
phosphor              18   2   9     4.478153
Best subsample: 
[1]  3  8  9 11 12 13 14 15 17
Outliers:  6 
[1]  1  4  6  7 10 16
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
  inorg  organic  
   15.7     39.0  

Robust Estimate of Covariance: 
         inorg  organic
inorg    110    142    
organic  142    202    
--------------------------------------------------------
stackloss             21   3  10     3.098066
Best subsample: 
 [1]  5  6  7  8  9 10 11 12 13 20
Outliers:  9 
[1]  1  2  3 15 16 17 18 19 21
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
  Air.Flow  Water.Temp  Acid.Conc.  
      59.5        20.8        87.3  

Robust Estimate of Covariance: 
            Air.Flow  Water.Temp  Acid.Conc.
Air.Flow     5.65      5.26        5.16     
Water.Temp   5.26      8.30        5.52     
Acid.Conc.   5.16      5.52       20.89     
--------------------------------------------------------
coleman               20   5  10     1.816553
Best subsample: 
 [1]  1  4  5  7 12 13 16 17 19 20
Outliers:  9 
[1]  2  6  8  9 10 11 14 15 18
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
  salaryP   fatherWc    sstatus  teacherSc  motherLev  
     2.88      52.84       9.05      25.13       6.57  

Robust Estimate of Covariance: 
           salaryP    fatherWc   sstatus    teacherSc  motherLev
salaryP      0.26785   -2.28870   -0.50288    0.28921   -0.00301
fatherWc    -2.28870  723.44928  121.65865    4.03943   17.17845
sstatus     -0.50288  121.65865   26.35704    1.78013    3.26736
teacherSc    0.28921    4.03943    1.78013    0.68413    0.25195
motherLev   -0.00301   17.17845    3.26736    0.25195    0.46667
--------------------------------------------------------
salinity              28   3  14     1.928138
Best subsample: 
 [1]  1  2  6  7  9 12 13 14 18 19 20 21 26 28
Outliers:  9 
[1]  3  5 10 11 15 16 17 23 24
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
   X1     X2     X3  
10.02   3.21  22.36  

Robust Estimate of Covariance: 
    X1      X2      X3    
X1   8.841   1.146  -2.923
X2   1.146   3.000  -0.443
X3  -2.923  -0.443   1.333
--------------------------------------------------------
wood                  20   5  10    -5.543842
Best subsample: 
 [1]  2  3  5  6  8 13 14 15 18 19
Outliers:  8 
[1]  1  7  9 10 11 12 16 17
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
   x1     x2     x3     x4     x5  
0.522  0.134  0.487  0.501  0.929  

Robust Estimate of Covariance: 
    x1         x2         x3         x4         x5       
x1   0.008673  -0.001125   0.004726   0.004310  -0.003388
x2  -0.001125   0.000689  -0.000829  -0.001578   0.000920
x3   0.004726  -0.000829   0.004545   0.002589  -0.002191
x4   0.004310  -0.001578   0.002589   0.004341  -0.002752
x5  -0.003388   0.000920  -0.002191  -0.002752   0.001907
--------------------------------------------------------
hbk                   75   3  37     1.199368
Best subsample: 
 [1] 17 18 19 20 21 23 24 25 27 29 32 33 35 38 39 40 41 43 45 47 48 49 50 51 52
[26] 54 55 56 57 58 62 63 64 66 67 69 71
Outliers:  15 
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 53
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
  X1    X2    X3  
1.63  1.87  1.56  

Robust Estimate of Covariance: 
    X1       X2       X3     
X1   1.1326  -0.0465   0.2711
X2  -0.0465   1.1671   0.2893
X3   0.2711   0.2893   0.9880
--------------------------------------------------------
Animals               28   2  14     9.121001
Best subsample: 
 [1]  1  3  4  5 10 11 14 17 18 21 22 23 24 26
Outliers:  14 
 [1]  2  6  7  8  9 12 13 14 15 16 23 24 25 28
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
 body  brain  
 15.5   83.8  

Robust Estimate of Covariance: 
       body   brain
body     435   1928
brain   1928  14976
--------------------------------------------------------
milk                  86   8  43    -1.109790
Best subsample: 
 [1]  5  7  8 10 19 22 23 24 30 31 32 33 34 35 38 39 43 46 48 49 51 52 53 54 55
[26] 56 57 60 61 63 64 66 67 68 69 71 76 78 79 80 81 83 84
Outliers:  26 
 [1]  1  2  3  4 11 12 13 14 15 16 17 18 20 27 40 41 42 44 47 50 70 73 74 75 77
[26] 85
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
    X1      X2      X3      X4      X5      X6      X7      X8  
  1.03   35.63   33.09   26.14   25.14   25.07  122.89   14.35  

Robust Estimate of Covariance: 
    X1         X2         X3         X4         X5         X6         X7       
X1   4.02e-07  -4.18e-05   1.78e-04   1.73e-04   1.64e-04   1.47e-04   3.95e-04
X2  -4.18e-05   1.02e+00   2.08e-01   1.49e-01   1.13e-01   1.68e-01   7.65e-01
X3   1.78e-04   2.08e-01   1.09e+00   8.01e-01   7.78e-01   7.82e-01   6.21e-01
X4   1.73e-04   1.49e-01   8.01e-01   6.32e-01   5.97e-01   5.94e-01   5.11e-01
X5   1.64e-04   1.13e-01   7.78e-01   5.97e-01   6.18e-01   5.88e-01   5.51e-01
X6   1.47e-04   1.68e-01   7.82e-01   5.94e-01   5.88e-01   6.04e-01   5.17e-01
X7   3.95e-04   7.65e-01   6.21e-01   5.11e-01   5.51e-01   5.17e-01   2.59e+00
X8  -1.65e-05   7.18e-02   1.61e-01   1.06e-01   9.22e-02   1.00e-01   1.36e-01
    X8       
X1  -1.65e-05
X2   7.18e-02
X3   1.61e-01
X4   1.06e-01
X5   9.22e-02
X6   1.00e-01
X7   1.36e-01
X8   1.05e-01
--------------------------------------------------------
bushfire              38   5  19     5.574666
Best subsample: 
 [1]  1  2  3  4  6 14 15 16 17 18 19 20 21 22 23 24 25 26 27
Outliers:  17 
 [1]  7  8  9 10 11 12 28 29 30 31 32 33 34 35 36 37 38
-------------

Call:
CovMve(x = x, trace = FALSE)
-> Method:  Minimum volume ellipsoid estimator 

Robust Estimate of Location: 
 V1   V2   V3   V4   V5  
104  146  276  218  279  

Robust Estimate of Covariance: 
    V1     V2     V3     V4     V5   
V1    294    224  -1522   -343   -278
V2    224    197  -1004   -205   -172
V3  -1522  -1004   9128   2244   1781
V4   -343   -205   2244    592    461
V5   -278   -172   1781    461    363
--------------------------------------------------------
========================================================
> 
